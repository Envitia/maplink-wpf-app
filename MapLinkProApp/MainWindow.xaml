<Window x:Class="MapLinkProApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mmv="clr-namespace:DrawingSurfacePanel;assembly=MapViewerPanel"
        xmlns:local="clr-namespace:MapLinkProApp" xmlns:integration="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
        mc:Ignorable="d"
        Title="MapLink WPF App" Height="800" Width="1200" WindowState="Maximized">
  <Grid>
    
    <!-- 
    MapLink does not yet have a WPF-native drawing surface, so we need to wrap the Windows.Forms drawing surface in a WindowsFormHost.
    This approach, however, means that we cannot simply overlay WPF controls on the drawing surface, due to the "airspace issue":
    https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/technology-regions-overview?view=netframeworkdesktop-4.8
    We solve this with the insertion of the OverlayControl, a solution devised  by Saurabh Singh (https://www.codeproject.com/Tips/5326355/Airspace-Solution).
    "OverlayContainer is a wrapper control where you can provide intended content to render on top of WinformHost/Browser.
    This container injects another WPF window into the region supplying its own content. OverlayWindow is the one being injected. 
    Extended HwndHost is used to glue WPF window into OverlayContainer."
    -->
    <WindowsFormsHost Name="MainMap">
      <WindowsFormsHost.Child>
        <mmv:MapViewerPanel />
      </WindowsFormsHost.Child>
    </WindowsFormsHost>

    <local:OverlayControl x:Name="OverlayContainer" >
      <Grid>

        <Grid x:Name="MaximiseGrid" Margin="10">
        </Grid>

        <Grid x:Name="DockGrid">
          <DockPanel>
            <DockPanel Name="SideDockPanel" DockPanel.Dock="Right"  Margin="3" LastChildFill="True" MinWidth="500" >
            </DockPanel>
            <DockPanel Name="BottomDockPanel" DockPanel.Dock="Bottom" Margin="3" LastChildFill="True" VerticalAlignment="Bottom" MinHeight="400" >
            </DockPanel>
          </DockPanel>
        </Grid>

        <Grid x:Name="FloatingWindowGrid">
          <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="1*" />
          </Grid.RowDefinitions>
          <Grid Grid.Row="0" Name="VertFloatingWindowGrid"  >
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
          </Grid>
          <Grid Grid.Row="1" Name="HorzFloatingWindowGrid" >
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
          </Grid>
        </Grid>
        
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
          </Grid.ColumnDefinitions>

          <StackPanel Grid.Column="0" Margin="10">
            <TextBlock>Depth Selection (m)</TextBlock>
            <local:SliderWithCustomToolTip x:Name="DepthSelector" Template="{StaticResource VerticalSlider}" Foreground="Black" Width="70" MinHeight="800" Margin="10.0" Orientation="Vertical" TickFrequency="5" IsDirectionReversed="True" TickPlacement="BottomRight" AutoToolTipPlacement="TopLeft" ValueChanged="Depth_ValueChanged"></local:SliderWithCustomToolTip>
          </StackPanel>

          <StackPanel Grid.Column="1" Orientation="Vertical"  VerticalAlignment="Top" HorizontalAlignment="Center">
            <Button Style="{StaticResource TabButton}" Name="LayersButton" Click="LayersButton_Click">Layers</Button>
            <StackPanel x:Name="MainLayersPanel" Visibility="Collapsed" Orientation="Vertical" Background="WhiteSmoke">
              <Label Content="Layers" HorizontalAlignment="Right"></Label>
            </StackPanel>
          </StackPanel>
          <StackPanel Grid.Column="1" Orientation="Horizontal"  HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin=".5,.5" Margin="0,0,-115,0" >
            <StackPanel.RenderTransform>
              <TransformGroup>
                <ScaleTransform/>
                <SkewTransform/>
                <RotateTransform Angle="90"/>
                <TranslateTransform/>
              </TransformGroup>
            </StackPanel.RenderTransform>
            <Button Style="{StaticResource TabButton}" x:Name="VerticleSliceButton" Click="VerticleSliceButton_Click">Vertical Slice</Button>
            <Button Style="{StaticResource TabButton}" x:Name="DepthProfileButton" Click="DepthProfileButton_Click" >Depth Profile</Button>
            <Button Style="{StaticResource TabButton}" x:Name="SecondPlanViewButton" >Second Plan View</Button>

          </StackPanel>
        </Grid>
      </Grid>
    </local:OverlayControl>
  </Grid>
</Window>
